/**
 * Created by aravind on 4/28/17.
 */
$(function () {

    $('form').on('submit', function (e) {
        var query = $("#message").val();
        showUserText();
        e.preventDefault();

        $.ajax({
            type: 'post',
            url: if(isset($_POST['submit'])){
            $query = $_POST['message'];
    
            $postData = array('query' => array($query), 'lang' => 'en', 'sessionId' => 123456789);
            $jsonData = json_encode($postData);
            $ch = curl_init('https://console.dialogflow.com/api-client/demo/embedded/ce9526e5-d6f9-402e-b268-cad287f1bf55/query?v=20170428');
            curl_setopt($ch, CURLOPT_POST, 1);
            curl_setopt($ch, CURLOPT_POSTFIELDS, $jsonData);
            curl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-Type: application/json', 'Authorization: Bearer YOUR_DEVELOPER_TOKEN'));
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
            $result = curl_exec($ch);

            echo $result;
            curl_close($ch);

            },
            //data: { userID : userID }
            data: {submit:true, message:query},
            success: function (response) {
                var obj = JSON.parse(response);
                var answerdiv = jQuery('<div/>', {
                    html: obj.result.fulfillment.speech.linkify()+'&nbsp;',
                    'class': "rounded-div-bot",
                    tabindex:1
                });
                $("#chat-text").append(answerdiv);
                $(answerdiv).focus();

                $("#message").focus();
            }
        });

    });

});

function showUserText(){
    var div = jQuery('<div/>', {
        text: $("#message").val(),
        'class': "rounded-div",
        tabindex:1
    });
    $("#chat-text" ).append(div);
    $("#message").val('');
}

if(!String.linkify) {
    String.prototype.linkify = function() {

        // http://, https://, ftp://
        var urlPattern = /\b(?:https?|ftp):\/\/[a-z0-9-+&@#\/%?=~_|!:,.;]*[a-z0-9-+&@#\/%=~_|]/gim;

        // www. sans http:// or https://
        var pseudoUrlPattern = /(^|[^\/])(www\.[\S]+(\b|$))/gim;

        // Email addresses
        var emailAddressPattern = /[\w.]+@[a-zA-Z_-]+?(?:\.[a-zA-Z]{2,6})+/gim;

        return this
            .replace(urlPattern, '<a target="_blank" href="$&">$&</a>')
            .replace(pseudoUrlPattern, '$1<a target="_blank" href="http://$2">$2</a>')
            .replace(emailAddressPattern, '<a href="mailto:$&">$&</a>');
    };
}